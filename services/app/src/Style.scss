@import '../../../shared/styles/constants.scss';

// ===============================================
// Transitional animation classes
// ===============================================

.next-enter {
  transform: translate(100%);
}
.next-enter.next-enter-active {
  transform: translate(0%);
  transition: transform 300ms ease-in-out;
}
.next-exit {
  position: absolute;
  transform: translate(0%);
}
.next-exit.next-exit-active {
  transform: translate(-100%);
  transition: transform 300ms ease-in-out;
}

.prev-enter {
  transform: translate(-100%);
}
.prev-enter.prev-enter-active {
  transform: translate(0%);
  transition: transform 300ms ease-in-out;
}
.prev-exit {
  position: absolute;
  transform: translate(0%);
}
.prev-exit.prev-exit-active {
  transform: translate(100%);
  transition: transform 300ms ease-in-out;
}

.nav-enter {
  opacity: 1;
}
.nav-enter.nav-enter-active {
  opacity: 1;
}
.nav-exit {
  opacity: 1;
}
.nav-exit.nav-exit-active {
  opacity: 0.01;
  transition: opacity 250ms ease-out;
}

.fade-enter {
  opacity: 0.01;
}
.fade-enter.fade-enter-active {
  opacity: 1;
  transition: opacity 500ms ease-in;
}
.fade-exit {
  opacity: 1;
}
.fade-exit.fade-exit-active {
  opacity: 0.01;
  transition: opacity 500ms ease-out;
}


// ===============================================
// Constants
// ===============================================

$abswidthmax: 769px;
$absheightmax: 1025px;
$absmaxdimension: 1025px;
$lineheight: 1.2;

$sizemap: (
  appbar: 48px,
  inputsquare: 48px,
  inputspacing: 16px, /* slightly larger on small devices (to prevent false touches) */
  input: 32px, /* size of input icon-style buttons */
  huge: 12vmin,
  large: 6vmin,
  icon: 4.5vmin,
  base: 2vmin,
  small: 1vmin,
  tiny: 0.5vmin,
);

$fontsizemap: (
  title: 6vmin,
  interactive: 5.5vmin,
  flavor: 4.7vmin,
);

@function fontsize($key) {
  @if map-has-key($fontsizemap, $key) {
    @return map-get($fontsizemap, $key);
  }

  @warn "Unknown `#{$key}` in $fontsizemap.";
  @return null;
}

@function size($key) {
  @if map-has-key($sizemap, $key) {
    @return map-get($sizemap, $key);
  }

  @warn "Unknown `#{$key}` in $sizemap.";
  @return null;
}

$border_desktop: size(base) solid #777;

// ===============================================
// Base/General Styles
// ===============================================

html {
  width: 100%;
  height: 100%;
}

body {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  background-color: $bg_primary;
  overflow: hidden;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.app_container {
  &, & > div:first-child {
    height: 100%;
    width: 100%;
  }
}

#noscript {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

.snackbar {
  span {
    color: $font_color_dark_primary !important;
  }
}

.MuiToolbar-root {
  min-height: 0 !important;
  border-bottom: $border_accent;
  flex: 0 0 auto;
  flex-flow: wrap !important;

  h6 {
    flex-grow: 1;
  }
}

#navfooter {
  border-top: $border_accent;
}

.MuiMobileStepper-root {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: $bg_primary;
}

span.weak {
  font-weight: 100;
}

.MuiSlider-root {
  flex-basis: 100%;
}

// for text inputs that are close to bottom, give the screen space to scroll up
.inputSpacer {
  margin-bottom: 100%;
}

// Fixes bug with Android apk where keyboard not scrolling view - https://github.com/ExpeditionRPG/expedition/issues/255
body.android .dialog .textfield:focus-within {
  padding-bottom: 300px;
}

// For things that use size() / get recalulcated on larger displays
@mixin styling() {
  .base_card {
    flex: 1;
    display: flex;
    flex-direction: column;
    background-color: $bg_primary;
    color: $font_color_primary;
    .child_wrapper {
      margin: size(large);
      margin-top: size(small);
      margin-bottom: 9vw;
      position: relative;
    }
    .article {
      position: relative;
      flex: 1;
      padding: size(base) 0;
      font-size: fontsize(flavor);
      background-repeat: repeat;
      background-position: center;
      width: 100%;
      overflow-x: hidden;
      overflow-y: auto;
      -webkit-overflow-scrolling: touch;

      // iPhone X padding fix
      padding-bottom: constant(safe-area-inset-bottom);
      padding-bottom: env(safe-area-inset-bottom);

      .scrollbox {
        position: relative;
        display: flex;
        flex-direction: column;
        width: 100%;
        max-width: $absmaxdimension;
        margin: auto;
        min-height: 50vh;
      }
    }
  }

  .base_main {
    position: absolute;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    display: flex;

    & > div {
      width: 100%;
    }

    .MuiToolbar-root {
      border: none !important;
    }

    #yearProgressBar {
      margin-top: -5px;
      height: 2px;
      background: $font_color_faded;
    }
  }

  .MuiDialogContent-root {
    padding: 0 !important;
  }

  .MuiCard-root {
    margin-bottom: size(small);
    margin: 0 size(small) size(base) size(small);
    border-radius: 0;

    .MuiCardHeader-root {
      align-items: flex-start;
      padding: size(base);
    }

    .MuiCardHeader-action {
      margin-right: 0 !important;
      text-align: right;
    }
  }

  // ===============================================
  // Card-specific styles
  // ===============================================
  #mainMenu {
    width: 100%;
    height: 100%;
    position: relative;
    background-color: $bg_primary;
    text-align: center;

    .logo {
      position: absolute;
      top: size(large);
      left: size(large);
      right: size(large);
      img {
        width: 100%;
        max-width: $absmaxdimension;
        margin: auto;
        display: block;
      }
    }

    #startMenu {
      position: absolute;
      top: 50%;
      left: 0;
      right: 0;

      button {
        display: block;
        margin: auto;
        margin-bottom: size(large);
      }
    }
  }

  #tutorialCard {
    text-align: center;
    padding: size(base);
    box-sizing: border-box;
  }

  #buildCard {
    display: flex;
    flex-flow: column;
    height: 100%;

    & > div {
      flex: 0 1 auto;
    }

    .scrollable {
      flex: 1 1 auto;
      overflow-y: auto;
    }
  }

  .generatorBuildList {
    background: #ddd;
    padding-top: size(base) !important;
  }

  .version {
    text-align: center;
    opacity: 0.7;
    margin-top: size(huge);
  }

  .menu_popup {
    background-color: $bg_primary;
    color: $font_color_primary;
  }
}

@include styling();

// ===============================================
// Apply scaling or fixed styling if we're on
// a desktop. Center and border the fixed result.
// ===============================================

// On large screens, shrink a bit...
$abs_scale_vw: $abswidthmax / 120vmin;
$abs_scale_vh: $absheightmax / 120vmin;

$sizemap: (
  inputspacing: 14px,
  inputsquare: 48px,
  input: 32px,
  huge: 12vmin * $abs_scale_vh,
  large: 6vmin * $abs_scale_vh,
  icon: 4vmin * $abs_scale_vh,
  base: 2vmin * $abs_scale_vh,
  small: 1vmin * $abs_scale_vh,
  tiny: 0.5vmin * $abs_scale_vh,
);

$fontsizemap: (
  title: 6vmin * $abs_scale_vw,
  interactive: 5vmin * $abs_scale_vw,
  flavor: 4.5vmin * $abs_scale_vw,
);

@media screen and (min-width: $abswidthmax), screen and (min-height: $absheightmax) {
  // Use the new desktop values defined above, only at this size
  @include styling();

  body, html, #react-app {
    height: 100%;
    width: 100%;
  }

  .app_container {
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
  }
}

@keyframes fadein {
  from { opacity: 0; }
  to   { opacity: 1; }
}
@-webkit-keyframes fadein {
  from { opacity: 0; }
  to   { opacity: 1; }
}
@-ms-keyframes fadein {
  from { opacity: 0; }
  to   { opacity: 1; }
}

@keyframes fadeout {
  0% { opacity: 1; height: 100%; }
  99% { opacity: 0; height: 100%; }
  100% { opacity: 0; height: 0; }
}
@-webkit-keyframes fadeout {
  0% { opacity: 1; height: 100%; }
  99% { opacity: 0; height: 100%; }
  100% { opacity: 0; height: 0; }
}
@-ms-keyframes fadeout {
  0% { opacity: 1; height: 100%; }
  99% { opacity: 0; height: 100%; }
  100% { opacity: 0; height: 0; }
}

@keyframes rotate {
  from { transform: rotate(0); }
  to   { transform: rotate(360deg); }
}
@-webkit-keyframes rotate {
  from { transform: rotate(0); }
  to   { transform: rotate(360deg); }
}
@-ms-keyframes rotate {
  from { transform: rotate(0); }
  to   { transform: rotate(360deg); }
}
