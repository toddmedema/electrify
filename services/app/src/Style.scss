@import '../../../shared/styles/constants.scss';

// ===============================================
// Transitional animation classes
// ===============================================

.next-enter {
  transform: translate(100%);
}
.next-enter.next-enter-active {
  transform: translate(0%);
  transition: transform 300ms ease-in-out;
}
.next-exit {
  position: absolute;
  transform: translate(0%);
}
.next-exit.next-exit-active {
  transform: translate(-100%);
  transition: transform 300ms ease-in-out;
}

.prev-enter {
  transform: translate(-100%);
}
.prev-enter.prev-enter-active {
  transform: translate(0%);
  transition: transform 300ms ease-in-out;
}
.prev-exit {
  position: absolute;
  transform: translate(0%);
}
.prev-exit.prev-exit-active {
  transform: translate(100%);
  transition: transform 300ms ease-in-out;
}

.nav-enter {
  opacity: 1;
}
.nav-enter.nav-enter-active {
  opacity: 1;
}
.nav-exit {
  opacity: 1;
}
.nav-exit.nav-exit-active {
  opacity: 0.01;
  transition: opacity 250ms ease-out;
}

.fade-enter {
  opacity: 0.01;
}
.fade-enter.fade-enter-active {
  opacity: 1;
  transition: opacity 500ms ease-in;
}
.fade-exit {
  opacity: 1;
}
.fade-exit.fade-exit-active {
  opacity: 0.01;
  transition: opacity 500ms ease-out;
}

.fadein-fast {
  opacity: 0;
  animation-name: fadein;
  animation-duration: 1s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

.fadein-slow {
  opacity: 0;
  animation-name: fadein;
  animation-delay: 1.5s;
  animation-duration: 2s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}


// ===============================================
// Constants
// ===============================================

$abswidthmax: 650px;
$absheightmax: 1025px;
$absmaxdimension: 1025px;

$sizemap: (
  large: 6vmin,
  medium: 4vmin,
  base: 2vmin,
  small: 1vmin,
  tiny: 0.5vmin,
);

@function size($key) {
  @if map-has-key($sizemap, $key) {
    @return map-get($sizemap, $key);
  }

  @warn "Unknown `#{$key}` in $sizemap.";
  @return null;
}

// ===============================================
// Base/General Styles
// ===============================================

html {
  width: 100%;
  height: 100%;
  background: #eee;
}

body {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  background-color: $bg_primary;
  overflow: hidden;
  width: 100%;
  height: 100%;
  max-width: $abswidthmax;
  margin: auto;
  padding: 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

@media screen and (min-width: $abswidthmax) {
  #react-app {
    border-left: 1px solid #bdbdbd; /* grey400 */
    border-right: 1px solid #bdbdbd; /* grey400 */
    box-sizing: border-box;
  }
}


#react-app {
  overflow: hidden;
}

.app_container {
  &, & > div:first-child {
    height: 100%;
    width: 100%;
  }
}

#noscript {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

.snackbar {
  span {
    color: $font_color_dark_primary !important;
  }
}

.draggable-indicator {
  position: absolute;
  left: -4px;
  z-index: 1;
  opacity: 0.5;
}

.base_main .MuiToolbar-root {
  min-height: 0 !important;
  flex: 0 0 auto;
  flex-flow: wrap !important;

  &.bottomBorder {
    border-bottom: $border_accent;
  }

  h6 {
    flex-grow: 1;
  }
}

.MuiDialogTitle-root {
  padding: 16px;
}

.react-joyride__overlay {
  cursor: auto !important;
}

.MuiSelect-select {
  padding-top: 2px !important;
  padding-left: 6px !important;
  padding-bottom: 0 !important;
  color: $interactive_blue !important;
}

.MuiSelect-icon {
  fill: $interactive_blue;
}

.MuiInput-underline:before {
  border: none !important;
}

.bold {
  font-weight: bold;
}

table {
  margin-bottom: 16px;
  th {
    font-weight: bold !important;
  }
  tr.bold td {
    padding-top: 16px;
  }
}

// Table has base left padding of 16px, each tab is 20px
.tabs-1 {
  td { padding-left: 36px; }
}
.tabs-2 {
  td:first-of-type { padding-left: 56px; }
  td { font-weight: 200; }
}

.expandable {
  position: relative;
  padding-bottom: size(small);
  &.notExpanded {
    .tabs-1, .tabs-2 {
      display: none;
    }
  }
}

// Fixes bug with desktop alignment
.MuiToolbar-gutters {
  padding-left: 16px !important;
  padding-right: 16px !important;
}

#navfooter {
  border-top: $border_accent;
}

.MuiMobileStepper-root {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: $bg_primary;
}

span.weak {
  font-weight: 100;
}

.flex-newline {
  flex-basis: 100%;
}

.MuiSlider-root {
  width: 50% !important;
  flex-grow: 1;
}

.MuiAvatar-root {
  transition: opacity .3s;
  z-index: 1;

  &.offline {
    opacity: 0.5;
  }

  .MuiAvatar-img {
    background-color: inherit !important;
  }
}

.flex-fully-centered {
  display: flex;
  justify-content: center;
  align-items: center;
}

.react-joyride__spotlight {
  background: none !important;
}

.base_main {
  position: absolute;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  display: flex;

  & > div {
    width: 100%;
  }

  .MuiToolbar-root {
    border: none;
    z-index: 0; /* fixes bug with psuedo element z-index not working as expected */
  }

  #yearProgressBar {
    margin-top: -5px;
    height: 2px;
    background: $font_color_faded;
    z-index: 100;
  }
}

.noPadding {
  padding: 0 !important;
}

.MuiListItemText-root, .MuiListItemSecondaryAction-root {
  z-index: 1;
}

.expandable {
  &:hover {
    cursor: pointer;
    background: #fafafa; /* grey50 */
  }
  .MuiCardContent-root {
    padding-top: 0;
  }
}

.blackout-pulsing {
  &:before {
    content: "";
    animation-name: pulsered;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
    position: absolute;
    top: 0;
    bottom: -4px;
    left: 0;
    right: 0;
    z-index: -2;
  }

  &:after {
    content: "";
    background-image: linear-gradient(rgba(255,255,255,0), rgba(255,255,255,255));
    position: absolute;
    top: 0;
    bottom: -6px;
    left: 0;
    right: 0;
    z-index: -1;
  }
}

.flexContainer {
  display: flex;
  flex-flow: column;

  .scrollable {
    flex: 1 1 auto !important;
    overflow-y: auto;
  }
}

.top-right {
  position: absolute !important;
  top: 0;
  right: 0;
}

.MuiButton-containedPrimary:hover {
  background-color: #1976d2; /* blue600->700 on hover */
}

// for text inputs that are close to bottom, give the screen space to scroll up
.inputSpacer {
  margin-bottom: 100%;
}

// Fixes bug with Android apk where keyboard not scrolling view - https://github.com/ExpeditionRPG/expedition/issues/255
body.android .dialog .textfield:focus-within {
  padding-bottom: 300px;
}

// For things that use size() / get recalulcated on larger displays
@mixin styling() {
  .clickable-card {
    &:hover {
      cursor: pointer;
      background: #fafafa; /* grey50 */
    }
  }

  .MuiCard-root {
    margin: 0 size(small) size(base) size(small);
    border-radius: 0;
    position: relative;

    .MuiCardHeader-root {
      align-items: flex-start;
      padding: size(base);
    }

    .MuiCardHeader-avatar {
      margin-right: size(base);
    }

    .MuiCardHeader-action {
      margin-right: 0 !important;
      margin-top: 0 !important;
      margin-left: 8px;
      text-align: right;

      p.MuiTypography-colorTextSecondary {
        margin-top: size(small);
      }
    }
  }

  .expand-icon {
    position: absolute;
    bottom: -6px;
    left: 50%;
    transform: translatex(-50%);
  }

  #tutorial-tooltip {
    background: $bg_primary;
    padding: size(medium);
    margin: auto;
    width: 90%;
    max-width: 500px;
    box-sizing: border-box;

    button {
      margin-top: size(medium);
    }

    .MuiButton-containedPrimary {
      float: right;
    }
  }

  // ===============================================
  // Card-specific styles
  // ===============================================
  #logo {
    position: absolute;
    top: size(large);
    left: size(large);
    right: size(large);
    img {
      width: 100%;
      max-width: $absmaxdimension;
      margin: auto;
      display: block;
    }
  }

  #menuCard {
    width: 100%;
    height: 100%;
    position: relative;
    background-color: $bg_primary;
    text-align: center;

    #centeredMenu {
      position: absolute;
      top: 40%;
      left: 0;
      right: 0;

      button {
        display: block;
        margin: auto;
        margin-bottom: size(large);
      }
    }
  }

  #manual {
    img {
      width: 100%;
    }
  }

  #gameSetupTable {
    margin: size(large) auto;
    width: auto;

    tr {
      height: 60px;
    }
  }

  #gameCard {
    height: 100%;

    & > div {
      flex: 0 1 auto;
    }
  }

  .cardList {
    background: #eceff1; /* blueGray50 */
    padding-top: size(base) !important;
    padding-bottom: 20px; /* for devices with with bottom bars */
    height: 100%;
  }

  .facility {
    border-top: 1px #eeeeee solid; /* grey200 */
  }

  .version {
    text-align: center;
    opacity: 0.7;
    margin-top: size(large);
  }

  .menu_popup {
    background-color: $bg_primary;
    color: $font_color_primary;
  }

  .outputProgressBar {
    background: #eeeeee; /* grey200 */
    position: absolute;
    top: 0;
    bottom: 2px;
    left: 0;
  }

  .MuiListItemAvatar-root {
    position: relative;

    .capacityProgressBar {
      width: 12px;
      background-color: #212121; /* grey 900 */
      position: absolute;
      bottom: 0;
      left: 42px;

      &:after {
        content: '';
        height: 39px;
        border: 1px solid #bdbdbd; /* grey 400 */
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
      }
    }
  }
}

@include styling();

// ===============================================
// Apply scaling or fixed styling if we're on
// a desktop. Center and border the fixed result.
// ===============================================

// On large screens, shrink a bit...
$abs_scale_vw: $abswidthmax / 120vmin;
$abs_scale_vh: $absheightmax / 120vmin;

$sizemap: (
  large: 5vmin * $abs_scale_vh,
  medium: 3vmin * $abs_scale_vh,
  base: 1.5vmin * $abs_scale_vh,
  small: 1vmin * $abs_scale_vh,
  tiny: 0.5vmin * $abs_scale_vh,
);

@media screen and (min-width: $abswidthmax), screen and (min-height: $absheightmax) {
  // Use the new desktop values defined above, only at this size
  @include styling();

  body, html, #react-app {
    height: 100%;
    width: 100%;
  }

  .app_container {
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
  }

  #tutorial-tooltip {
    width: auto;
  }
}

// KEYFRAMES
@keyframes fadein {
  from { opacity: 0; }
  to   { opacity: 1; }
}
@keyframes fadeout {
  0% { opacity: 1; height: 100%; }
  99% { opacity: 0; height: 100%; }
  100% { opacity: 0; height: 0; }
}

@keyframes rotate {
  from { transform: rotate(0); }
  to   { transform: rotate(360deg); }
}

@keyframes pulsered {
  0% { background-color: $bg_primary; }
  50% { background-color: $blackout_red; }
  100% { background-color: $bg_primary; }
}
